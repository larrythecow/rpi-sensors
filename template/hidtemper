#!/usr/bin/perl -w

#** @file template.pl
# @verbatim
#####################################################################
# This program is not guaranteed to work at all, and by using this  #
# program you release the author of any and all liability.          #
#                                                                   #
# You may use this code as long as you are in compliance with the   #
# license (see the LICENSE file) and this notice, disclaimer and    #
# comment box remain intact and unchanged.                          #
#                                                                   #
# Class:       template                                         #
# Description: munin plugin for template sensor                    #
#                                                                   #
# Written by:  Imran Shamshad (sid@projekt-turm.de)                 #
##################################################################### 
# @endverbatim
#
# @copy 2011, Imran Shamhad (sid@projekt-turm.de)
# $Id: $template.pl
#*

BEGIN { push @INC, '/opt/rpi-sensors/lib' }

use strict;
use warnings;

use sensors;
use Munin::Plugin;

my $sensorID;
my $sensorName="hidtemper";
my @temp;
my $fh;
my $storage;

if (defined $ARGV[0] && $ARGV[0] eq 'autoconf') {
        if( !(getHidTEMPer() eq "U") ){
                print "yes\n";
                exit(0);
        } else {
                print "no\n";
                exit(1);
        }
}

if (defined $ARGV[0] && $ARGV[0] eq 'config') {
print <<EOM;
graph_title		$sensorName temperature
graph_vlabel	°C
graph_category	sensors

$sensorName.label		°C
$sensorName.warning	15.0:40.0
$sensorName.critical	10.0:30.0
EOM
exit(0);
}
else{
        open ($fh, "+</tmp/cron/$sensorName") || die "cant open file: $!\n";
        $storage = <$fh>;
        close $fh;

        chomp($storage);
#        @temp = split(' ', $storage);

        print "$sensorName.value $storage\n";
}
