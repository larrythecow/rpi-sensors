#!/usr/bin/perl -w

#** @file HidTEMPer.pl
# @verbatim
#####################################################################
# This program is not guaranteed to work at all, and by using this  #
# program you release the author of any and all liability.          #
#                                                                   #
# You may use this code as long as you are in compliance with the   #
# license (see the LICENSE file) and this notice, disclaimer and    #
# comment box remain intact and unchanged.                          #
#                                                                   #
# Class:       bcmHidTEMPer                                         #
# Description: munin plugin for HidTEMPer sensor                    #
#                                                                   #
# Written by:  Imran Shamshad (sid@projekt-turm.de)                 #
##################################################################### 
# @endverbatim
#
# @copy 2011, Imran Shamhad (sid@projekt-turm.de)
# $Id: $HidTEMPer.pl
#*

#** replace with "basedir" or so
BEGIN { push @INC, '/opt/rpi-sensors/lib' }

use strict;
use warnings;

use sensors;
use Munin::Plugin;

my $sensorID;
my $sensorName="ds1820_";
my @temp;
my $fh;
my $storage;

if( !($0=~ m\ds1820_(.*)\) ){
	die "unable to read ID of DS1820 from filename";
}
$sensorID = $1;

if (defined $ARGV[0] && $ARGV[0] eq 'autoconf') {
	if( !(getTempDS1820($sensorID) eq "U") ){
		print "yes\n";
		exit(0);
	} else {
		print "no\n";
		exit(1);
	}
}

if (defined $ARGV[0] && $ARGV[0] eq 'config') {
print <<EOM;
graph_title DS1820 $sensorID temperature 
graph_vlabel Â°C
graph_category sensors

$sensorID.label		DS1820 $sensorID Temperature
$sensorID.warning	15.0:20.0
$sensorID.critical	10.0:30.0
EOM
exit(0);
}
else{

        open ($fh, join('', '<', "/opt/tmp/cron/", $sensorName, $sensorID)) || die "cant open file: $!\n";
        $storage = <$fh>;
        close $fh;

        chomp($storage);

        print "$sensorID.value $storage\n";
}
